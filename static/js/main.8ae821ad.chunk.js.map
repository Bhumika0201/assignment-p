{"version":3,"sources":["logo.svg","userTable.js","form.js","App.js","reportWebVitals.js","index.js"],"names":["UserTable","props","console","log","users","React","useState","className","style","width","map","val","textAlign","name","address","occupation","dob","Form","setName","setOccupation","setAddress","setDob","formErrors","setFormErrors","setUsers","flexDirection","display","border","borderColor","padding","margin","onSubmit","event","preventDefault","formErrorsVal","error","message","push","Date","length","value","htmlFor","type","placeholder","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae821ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect } from 'react';\n\n\nconst UserTable = (props) => {\n    console.log(props.users)\n \n    const [users, setUsers] = React.useState([]);\n \n  \n    return (\n        <div>\n           <p className=\"label\">USER TABLE</p>   \n             <div  className=\"grid-container-table\" >\n               \n        <div  className=\"label\" style={{width:150}}>\n            Name\n        </div>\n        <div  className=\"label\" style={{width:200}}>\n            Address\n        </div>\n        <div className=\"label\" style={{width:100}}>\n            Occupation\n        </div>\n        <div className=\"label\" style={{width:100}}>\n            DOB\n        </div>\n    </div><hr/>\n    {props.users.map(val=>{return(    <div>   <div  className=\"grid-container-table\" >\n                <div style={{width:150,textAlign:'left'}}>\n                 {val.name}\n                </div>\n                <div style={{width:200,textAlign:'left'}}>\n                {   val.address}\n                </div>\n                <div style={{width:100}}>\n                {   val.occupation}\n                </div>\n                <div style={{width:100}}>\n                {   val.dob}\n                </div>\n            </div>\n           <hr/></div>\n\n    )\n         \n    })}\n       </div>\n    );\n}\n\nexport default UserTable;","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport UserTable from './userTable'\n\n\nconst Form = () => {\n    const [name, setName] = React.useState('')\n    const [occupation, setOccupation] = React.useState('')\n    const [address, setAddress] = React.useState('')\n    const [dob, setDob] = React.useState('')\n    const [formErrors, setFormErrors] = React.useState([]);\n    const [users, setUsers] = React.useState([]);\n\n\n    function mySubmitHandler(event) {\n     \n        event.preventDefault();\n        setFormErrors([])\n        let formErrorsVal=[]\n        if(name===''){\n            console.log('here')\n            let error = {\n                name:'name',\n                message:'Name Cannot be Empty'\n            }\n            setFormErrors(formErrors => [...formErrors, error])\n            console.log(formErrors)\n            formErrorsVal.push(error)\n\n           \n        }\n         if(address===''){\n            let error = {\n                name:'address',\n                message:'Address Cannot be Empty'\n            }\n            setFormErrors(formErrors => [...formErrors, error])\n            formErrorsVal.push(error)\n        }\n         if(dob===''){\n            let error = {\n                name:'dob',\n                message:'Date Of Birth Cannot be Empty'\n            }\n            setFormErrors(formErrors => [...formErrors, error])\n            formErrorsVal.push(error)\n        }\n       \n         if(new Date(dob) > new Date()){\n            let error = {\n                name:'dob',\n                message:'Date Of Birth Cannot be greater than today'\n            }\n            setFormErrors(formErrors => [...formErrors, error])\n            formErrorsVal.push(error)\n        }\n         if(occupation===''){\n            let error = {\n                name:'occupation',\n                message:'Occupation Cannot be Empty'\n            }\n            setFormErrors(formErrors => [...formErrors, error])\n            formErrorsVal.push(error)\n        }\n        else if(formErrorsVal.length===0){\n            console.log(formErrors)\n            let value ={\n                name:name,\n                occupation:occupation,\n                address:address,\n                dob:dob\n            }\n            setName('')\n            setOccupation('')\n            setDob('')\n            setAddress('')\n            setUsers(users => [...users, value])\n        }\n    }\n    return (\n        <div className=\"App\" style={{ flexDirection: 'row',  display: 'flex'}}>\n            <form style={{ \n                width: '30%', flexDirection: 'column', border: 'solid', borderColor: 'rgb(213 209 209)', padding: 30, margin: 40\n            }} onSubmit={mySubmitHandler}>\n                <div className=\"grid-container\">\n                    <label className=\"label\" htmlFor=\"name\">Name</label>\n                    <input type=\"name\"  className=\"grid-item\" name=\"name\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)} />\n\n                </div>\n                <div className=\"panel\">\n                    {formErrors.map(val =>{\n                        if(val.name==='name'){\n                            return(val.message)\n                        }\n\n                    })}\n        </div>\n                <div className=\"grid-container\">\n                    <label className=\"label\" htmlFor=\"address\">Address</label>\n                    <textarea type=\"address\"  className=\"grid-item\" name=\"address\"\n                        placeholder=\"Address\"\n                        value={address}\n                        onChange={e => setAddress(e.target.value)} />\n\n                </div>\n                <div className=\"panel\">\n                    {formErrors.map(val =>{\n                        if(val.name==='address'){\n                            return(val.message)\n                        }\n\n                    })}\n        </div>\n                <div className=\"grid-container\">\n                    <label className=\"label\" htmlFor=\"occcupation\">Occupation</label>\n                    <select className=\"grid-item\"  name=\"occupation\"\n                        placeholder=\"occupation\"\n                        value={occupation}\n                        onChange={e => setOccupation(e.target.value)}>\n                        <option value=\"\">Please choose</option>\n                        <option value=\"Salaried\">Salaried</option>\n                        <option value=\"Government\">Government</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n\n                </div>\n                <div className=\"panel\">\n                    {formErrors.map(val =>{\n                        if(val.name==='occupation'){\n                            return(val.message)\n                        }\n\n                    })}\n        </div>\n                <div className=\"grid-container\">\n                    <label className=\"label\" htmlFor=\"dob\">DOB</label>\n                    <input className=\"grid-item\" name=\"dob\" type=\"date\"\n                        placeholder=\"dob\"\n                        value={dob}\n                        onChange={e => setDob(e.target.value)} />\n\n                </div>\n                <div className=\"panel\">\n                    {formErrors.map(val =>{\n                        if(val.name==='dob'){\n                            return(val.message)\n                        }\n\n                    })}\n        </div>\n                \n                <button type=\"submit\" style={{ textAlign: 'center' }}>ADD USER</button>\n            </form>\n            <div style={{  \n                width: '70%', flexDirection: 'column', border: 'solid', borderColor: 'rgb(213 209 209)', padding: 30, margin: 40\n            }}>\n            {users.length!==0?<UserTable users={users}/>:<p>No users present please add users</p>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Form;","import logo from './logo.svg';\nimport './App.css';\nimport Form from './form'\nfunction App() {\n  return (\n    <div className=\"App\">\n<Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}